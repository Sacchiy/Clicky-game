{"ast":null,"code":"import _classCallCheck from \"/Users/Sachiko/ProjectFile/Clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sachiko/ProjectFile/Clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sachiko/ProjectFile/Clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sachiko/ProjectFile/Clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sachiko/ProjectFile/Clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sachiko/ProjectFile/Clicky-game/src/App.js\";\n//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport ImageCard from \"./components/ImageCard\";\nimport Footer from \"./component\";\nimport character from \"./character.json\";\nimport \"./App.css\"; //sets state to 0 or empty\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      character: character,\n      clickedChar: [],\n      score: 0\n    };\n\n    _this.imageClick = function (event) {\n      var currentChar = event.target.alt;\n      var CharAlreadyClicked = _this.state.clickedChar.indexOf(currentChar) > -1; //if you click on a fish that has already been selected, the game is reset and cards reordered\n\n      if (CharAlreadyClicked) {\n        _this.setState({\n          character: _this.state.character.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedChar: [],\n          score: 0\n        });\n\n        alert(\"You lose. Play again?\"); //if you click on an available fish, your score is increased and cards reordered\n      } else {\n        _this.setState({\n          fish: _this.state.character.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedChar: _this.state.clickedChar.concat(currentChar),\n          score: _this.state.score + 1\n        }, //if you get all 12 fish corrent you get a congrats message and the game resets        \n        function () {\n          if (_this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n\n            _this.setState({\n              character: _this.state.character.sort(function (a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedChar: [],\n              score: 0\n            });\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    //the order of components to be rendered: navbar, jumbotron, friendcard, footer \n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.character.map(function (character) {\n        return React.createElement(ImageCard, {\n          imageClick: _this2.imageClick,\n          id: character.id,\n          key: character.id,\n          image: character.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Sachiko/ProjectFile/Clicky-game/src/App.js"],"names":["React","Component","Navbar","Jumbotron","ImageCard","Footer","character","App","state","clickedChar","score","imageClick","event","currentChar","target","alt","CharAlreadyClicked","indexOf","setState","sort","a","b","Math","random","alert","fish","concat","map","id","image"],"mappings":"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","sourcesContent":["//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport ImageCard from \"./components/ImageCard\";\nimport Footer from \"./component\";\nimport character from \"./character.json\";\nimport \"./App.css\";\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    character,\n    clickedChar: [],\n    score: 0\n  };\n\n//when you click on a card ... the fish is taken out of the array\n  imageClick = event => {\n    const currentChar = event.target.alt;\n    const CharAlreadyClicked =\n      this.state.clickedChar.indexOf(currentChar) > -1;\n\n//if you click on a fish that has already been selected, the game is reset and cards reordered\n    if (CharAlreadyClicked) {\n      this.setState({\n        character: this.state.character.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedChar: [],\n        score: 0\n      });\n        alert(\"You lose. Play again?\");\n\n//if you click on an available fish, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          fish: this.state.character.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedChar: this.state.clickedChar.concat(\n            currentChar\n          ),\n          score: this.state.score + 1\n        },\n//if you get all 12 fish corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              character: this.state.character.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedChar: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n//the order of components to be rendered: navbar, jumbotron, friendcard, footer \n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.character.map(character => (\n            <ImageCard\n              imageClick={this.imageClick}\n              id={character.id}\n              key={character.id}\n              image={character.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}